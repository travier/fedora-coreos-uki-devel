name: "Build Fedora CoreOS UKI image"

env:
  NAME: "fedora-coreos-uki"
  REGISTRY: "quay.io/travier"

on:
  # pull_request:
  #   branches:
  #     - main
  push:
    # branches:
    #   - main
  schedule:
    - cron: '0 4 * * *'
  workflow_dispatch:

permissions: read-all

# Prevent multiple workflow runs from racing to ensure that pushes are made
# sequentialy for the main branch. Also cancel in progress workflow runs for
# pull requests only.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build-push-image:
    runs-on: ubuntu-24.04
    container:
      image: quay.io/coreos-assembler/coreos-assembler:latest
      env:
        COSA_PRIVILEGED: 1
      options: --security-opt=label=disable --privileged --user 0:0 --device=/dev/kvm --device=/dev/fuse --volume /:/run/host:rw --volume /var/run/docker.sock:/var/run/docker.sock
    steps:
      - name: Reclaim disk space
        run: |
          dnf install -y moby-engine
          docker image prune --all --force
          rm -rf "/run/host/usr/local/lib/android"
          dnf remove -y moby-engine

      - name: Fixup constainers/storage.conf
        run: |
          sed -i 's/driver = "overlay"/driver = "vfs"/' /usr/share/containers/storage.conf

      - name: Fixup GitHub homedir
        run: |
          mkdir -p /github/home/.docker/

      - name: Login to Container Registry
        uses: redhat-actions/podman-login@v1
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          auth_file_path: /tmp/auth.json

        # sed -i --follow-symlinks "s/sudo -E / /g" /usr/lib/coreos-assembler/cmd*
        # sed -i --follow-symlinks "s/sudo / /g" /usr/lib/coreos-assembler/cmd*
        # sed -i --follow-symlinks "s/efi_system_size_mb: 127/efi_system_size_mb: 512/" /usr/lib/coreos-assembler/osbuild-manifests/coreos.osbuild.x86_64.mpp.yaml
        # sed -i --follow-symlinks "s/boot_size_mb: 384/boot_size_mb: 512/" /usr/lib/coreos-assembler/osbuild-manifests/coreos.osbuild.x86_64.mpp.yaml
        # sed -i --follow-symlinks "s/nonroot_partition_sizes=513/nonroot_partition_sizes=2048/" /usr/lib/coreos-assembler/cmd-buildextend-qemu
      - name: Use patched coreos-assembler
        run: |
          git clone --depth=1 -b main-uki https://github.com/travier/coreos-assembler.git
          cd coreos-assembler
          make KOLET_ARCHES=x86_64
          make install

      - name: Install more packages
        run: |
          dnf install -y sbsigntools systemd-boot-unsigned systemd-ukify

      - name: Use patched osbuild
        run: |
          git clone --depth=1 -b main-uki https://github.com/travier/osbuild.git
          cd osbuild
          dnf builddep osbuild
          make rpm
          dnf install -y --allowerasing ./rpmbuild/RPMS/noarch/*.rpm

      - name: Get sources
        run: |
          mkdir uki
          cd uki
          cosa init "https://github.com/travier/fedora-coreos-uki-devel.git"

      - name: Setup overrides
        run: |
          cd uki/overrides/rpm
          wget "https://download.copr.fedorainfracloud.org/results/@CoreOS/continuous/fedora-40-x86_64/07771174-rpm-ostree/rpm-ostree-2024.6.66.g6987471c-1.fc40.x86_64.rpm"
          wget "https://download.copr.fedorainfracloud.org/results/@CoreOS/continuous/fedora-40-x86_64/07771174-rpm-ostree/rpm-ostree-libs-2024.6.66.g6987471c-1.fc40.x86_64.rpm"

      # - name: Generate a key for ostree signing
      #   run: ./gen-ostree-signing-key

      - name: Build container & qcow2 image
        run: |
          cd uki
          cosa build

      - name: Push to Container Registry
        run: |
          cd uki
          buildid="$(cat builds/builds.json | jq -r '.builds[0].id')"
          skopeo copy \
            --authfile /tmp/auth.json \
            --retry-times 3 \
            --dest-compress-format gzip \
            oci-archive:builds/latest/x86_64/fedora-coreos-${buildid}-ostree.x86_64.ociarchive \
            docker://quay.io/travier/fedora-coreos-uki:latest

      - name: Push to QCOW2 image to Container Registry
        run: |
          cd uki
          buildid="$(cat builds/builds.json | jq -r '.builds[0].id')"
          container="$(buildah from scratch)"
          buildah copy "${container}" builds/latest/x86_64/fedora-coreos-${buildid}-qemu.x86_64.qcow2 /
          commit="$(buildah commit ${container})"
          buildah push \
            --authfile /tmp/auth.json \
            --retry 3 \
            --compression-format gzip \
            ${commit} \
            docker://quay.io/travier/fedora-coreos-uki:qcow2
